# Generated by Django 4.2.5 on 2025-10-06 08:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0004_userprofile_gender_userprofile_province'),
    ]

    operations = [
        migrations.CreateModel(
            name='PrivacySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hide_avatar', models.BooleanField(default=False, help_text='Hide avatar from other users')),
                ('hide_online_status', models.BooleanField(default=False, help_text='Hide online status from other users')),
                ('allow_messages_from_strangers', models.BooleanField(default=True, help_text='Allow messages from users who are not following you')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='privacy_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Privacy Settings',
                'verbose_name_plural': 'Privacy Settings',
                'db_table': 'privacy_settings',
            },
        ),
        migrations.CreateModel(
            name='UserBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True, help_text='Optional reason for blocking')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blocked_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by_relations', to=settings.AUTH_USER_MODEL)),
                ('blocker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocking_relations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_blocks',
                'indexes': [models.Index(fields=['blocker'], name='user_blocks_blocker_86f5c5_idx'), models.Index(fields=['blocked_user'], name='user_blocks_blocked_14f9e6_idx')],
                'unique_together': {('blocker', 'blocked_user')},
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('user', 'User'), ('post', 'Post'), ('comment', 'Comment')], max_length=20)),
                ('reason', models.CharField(choices=[('spam', 'Spam'), ('harassment', 'Harassment or Bullying'), ('hate_speech', 'Hate Speech'), ('inappropriate', 'Inappropriate Content'), ('impersonation', 'Impersonation'), ('other', 'Other')], max_length=30)),
                ('description', models.TextField(blank=True, help_text='Additional details about the report')),
                ('reported_post_id', models.IntegerField(blank=True, help_text='Post ID if reporting a post', null=True)),
                ('reported_comment_id', models.IntegerField(blank=True, help_text='Comment ID if reporting a comment', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewing', 'Under Review'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('moderator_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reported_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports_against', to=settings.AUTH_USER_MODEL)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports_made', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports_reviewed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'db_table': 'reports',
                'indexes': [models.Index(fields=['reporter', 'created_at'], name='reports_reporte_07de2b_idx'), models.Index(fields=['status', 'created_at'], name='reports_status_19e159_idx'), models.Index(fields=['report_type', 'status'], name='reports_report__f9d8bf_idx')],
            },
        ),
    ]
